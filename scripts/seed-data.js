import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function seedData() {
  try {
    console.log('üå± Cr√©ation des donn√©es de test...');

    // Cr√©er des √©v√©nements de test
    const event1 = await prisma.event.create({
      data: {
        name: 'Festival d\'√ât√© 2024',
        description: 'Le grand festival de l\'√©t√© avec tous les artistes',
        startDate: new Date('2024-07-15T18:00:00Z'),
        endDate: new Date('2024-07-15T23:00:00Z'),
        isActive: true,
      }
    });

    const event2 = await prisma.event.create({
      data: {
        name: 'Festival d\'Hiver 2025',
        description: 'Festival en pr√©paration pour l\'hiver prochain',
        startDate: new Date('2025-01-20T19:00:00Z'),
        endDate: new Date('2025-01-20T00:00:00Z'),
        isActive: true,
      }
    });

    console.log('‚úÖ √âv√©nements cr√©√©s:');
    console.log(`   - ${event1.name} (${event1.id})`);
    console.log(`   - ${event2.name} (${event2.id})`);

    // Cr√©er des utilisateurs de test
    const hashedPassword = await bcrypt.hash('password123', 10);

    const users = [
      {
        email: 'entry@festival.com',
        password: hashedPassword,
        name: 'Contr√¥leur Entr√©e',
        role: 'ENTRY',
        eventId: event1.id
      },
      {
        email: 'exit@festival.com',
        password: hashedPassword,
        name: 'Contr√¥leur Sortie',
        role: 'EXIT',
        eventId: event1.id
      },
      {
        email: 'vendeur@festival.com',
        password: hashedPassword,
        name: 'Vendeur Tickets',
        role: 'VENDEUR',
        eventId: event1.id
      },
      {
        email: 'reentry@festival.com',
        password: hashedPassword,
        name: 'Contr√¥leur R√©-entr√©e',
        role: 'REENTRY',
        eventId: event1.id
      }
    ];

    for (const userData of users) {
      const user = await prisma.user.create({
        data: userData
      });
      console.log(`   - ${user.name} (${user.email}) - ${user.role}`);
    }

    console.log('\nüéâ Donn√©es de test cr√©√©es avec succ√®s !');
    console.log('\nüìã Comptes de test disponibles:');
    console.log('   ‚Ä¢ admin@festival.com / admin123 (ADMIN)');
    console.log('   ‚Ä¢ entry@festival.com / password123 (ENTRY)');
    console.log('   ‚Ä¢ exit@festival.com / password123 (EXIT)');
    console.log('   ‚Ä¢ vendeur@festival.com / password123 (VENDEUR)');
    console.log('   ‚Ä¢ reentry@festival.com / password123 (REENTRY)');

  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation des donn√©es de test:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedData(); 